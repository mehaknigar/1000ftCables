/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
var ApiClient = require('../ApiClient');




/**
 * The V1Money model module.
 * @module model/V1Money
 */

/**
 * Constructs a new <code>V1Money</code>.
 * 
 * @alias module:model/V1Money
 * @class
 */
var exports = function() {
  var _this = this;



};

/**
 * Constructs a <code>V1Money</code> from a plain JavaScript object, optionally creating a new instance.
 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @param {module:model/V1Money} obj Optional instance to populate.
 * @return {module:model/V1Money} The populated <code>V1Money</code> instance.
 */
exports.constructFromObject = function(data, obj) {
  if (data) {
    obj = obj || new exports();

      if (data.hasOwnProperty('amount')) {
      obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
    }
      if (data.hasOwnProperty('currency_code')) {
      obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
    }
    }
  return obj;
}

/**
 * Amount in the lowest denominated value of this Currency. E.g. in USD these are cents, in JPY they are Yen (which do not have a 'cent' concept).
 * @member {Number} amount
 */
exports.prototype['amount'] = undefined;
/**
 *  See [Currency](#type-currency) for possible values
 * @member {String} currency_code
 */
exports.prototype['currency_code'] = undefined;



module.exports = exports;



