/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
var ApiClient = require('../ApiClient');




/**
 * The CatalogTimePeriod model module.
 * Note: This model is in beta.
 * @module model/CatalogTimePeriod
 */

/**
 * Constructs a new <code>CatalogTimePeriod</code>.
 * Represents a time period - either a single period or a repeating period.
 * @alias module:model/CatalogTimePeriod
 * @class
 */
var exports = function() {
  var _this = this;


};

/**
 * Constructs a <code>CatalogTimePeriod</code> from a plain JavaScript object, optionally creating a new instance.
 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @param {module:model/CatalogTimePeriod} obj Optional instance to populate.
 * @return {module:model/CatalogTimePeriod} The populated <code>CatalogTimePeriod</code> instance.
 */
exports.constructFromObject = function(data, obj) {
  if (data) {
    obj = obj || new exports();

      if (data.hasOwnProperty('event')) {
      obj['event'] = ApiClient.convertToType(data['event'], 'String');
    }
    }
  return obj;
}

/**
 * An iCalendar (RFC5545) [event](https://tools.ietf.org/html/rfc5545#section-3.6.1), which specifies the name, timing, duration and recurrence of this time period.  Example:  ``` DTSTART:20190707T180000 DURATION:P2H RRULE:FREQ=WEEKLY;BYDAY=MO,WE,FR ```  Only `SUMMARY`, `DTSTART`, `DURATION` and `RRULE` fields are supported. `DTSTART` must be in local (unzoned) time format. Note that while `BEGIN:VEVENT` and `END:VEVENT` is not required in the request. The response will always include them.
 * @member {String} event
 */
exports.prototype['event'] = undefined;



module.exports = exports;



