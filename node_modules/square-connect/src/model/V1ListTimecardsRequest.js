/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
var ApiClient = require('../ApiClient');




/**
 * The V1ListTimecardsRequest model module.
 * @module model/V1ListTimecardsRequest
 */

/**
 * Constructs a new <code>V1ListTimecardsRequest</code>.
 * 
 * @alias module:model/V1ListTimecardsRequest
 * @class
 */
var exports = function() {
  var _this = this;












};

/**
 * Constructs a <code>V1ListTimecardsRequest</code> from a plain JavaScript object, optionally creating a new instance.
 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @param {module:model/V1ListTimecardsRequest} obj Optional instance to populate.
 * @return {module:model/V1ListTimecardsRequest} The populated <code>V1ListTimecardsRequest</code> instance.
 */
exports.constructFromObject = function(data, obj) {
  if (data) {
    obj = obj || new exports();

      if (data.hasOwnProperty('order')) {
      obj['order'] = ApiClient.convertToType(data['order'], 'String');
    }
      if (data.hasOwnProperty('employee_id')) {
      obj['employee_id'] = ApiClient.convertToType(data['employee_id'], 'String');
    }
      if (data.hasOwnProperty('begin_clockin_time')) {
      obj['begin_clockin_time'] = ApiClient.convertToType(data['begin_clockin_time'], 'String');
    }
      if (data.hasOwnProperty('end_clockin_time')) {
      obj['end_clockin_time'] = ApiClient.convertToType(data['end_clockin_time'], 'String');
    }
      if (data.hasOwnProperty('begin_clockout_time')) {
      obj['begin_clockout_time'] = ApiClient.convertToType(data['begin_clockout_time'], 'String');
    }
      if (data.hasOwnProperty('end_clockout_time')) {
      obj['end_clockout_time'] = ApiClient.convertToType(data['end_clockout_time'], 'String');
    }
      if (data.hasOwnProperty('begin_updated_at')) {
      obj['begin_updated_at'] = ApiClient.convertToType(data['begin_updated_at'], 'String');
    }
      if (data.hasOwnProperty('end_updated_at')) {
      obj['end_updated_at'] = ApiClient.convertToType(data['end_updated_at'], 'String');
    }
      if (data.hasOwnProperty('deleted')) {
      obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
    }
      if (data.hasOwnProperty('limit')) {
      obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
    }
      if (data.hasOwnProperty('batch_token')) {
      obj['batch_token'] = ApiClient.convertToType(data['batch_token'], 'String');
    }
    }
  return obj;
}

/**
 * The order in which timecards are listed in the response, based on their created_at field. See [SortOrder](#type-sortorder) for possible values
 * @member {String} order
 */
exports.prototype['order'] = undefined;
/**
 * If provided, the endpoint returns only timecards for the employee with the specified ID.
 * @member {String} employee_id
 */
exports.prototype['employee_id'] = undefined;
/**
 * If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format.
 * @member {String} begin_clockin_time
 */
exports.prototype['begin_clockin_time'] = undefined;
/**
 * If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format.
 * @member {String} end_clockin_time
 */
exports.prototype['end_clockin_time'] = undefined;
/**
 * If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format.
 * @member {String} begin_clockout_time
 */
exports.prototype['begin_clockout_time'] = undefined;
/**
 * If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format.
 * @member {String} end_clockout_time
 */
exports.prototype['end_clockout_time'] = undefined;
/**
 * If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format.
 * @member {String} begin_updated_at
 */
exports.prototype['begin_updated_at'] = undefined;
/**
 * If filtering results by their updated_at field, the end of the requested reporting period, in ISO 8601 format.
 * @member {String} end_updated_at
 */
exports.prototype['end_updated_at'] = undefined;
/**
 * If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don't provide this parameter, both valid and deleted timecards are returned.
 * @member {Boolean} deleted
 */
exports.prototype['deleted'] = undefined;
/**
 * The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.
 * @member {Number} limit
 */
exports.prototype['limit'] = undefined;
/**
 * A pagination cursor to retrieve the next set of results for your original query to the endpoint.
 * @member {String} batch_token
 */
exports.prototype['batch_token'] = undefined;



module.exports = exports;



