/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
var ApiClient = require('../ApiClient');
var Address = require('./Address');
var V1MerchantLocationDetails = require('./V1MerchantLocationDetails');
var V1PhoneNumber = require('./V1PhoneNumber');




/**
 * The V1Merchant model module.
 * @module model/V1Merchant
 */

/**
 * Constructs a new <code>V1Merchant</code>.
 * Defines the fields that are included in the response body of a request to the **RetrieveBusiness** endpoint.
 * @alias module:model/V1Merchant
 * @class
 */
var exports = function() {
  var _this = this;
















};

/**
 * Constructs a <code>V1Merchant</code> from a plain JavaScript object, optionally creating a new instance.
 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @param {module:model/V1Merchant} obj Optional instance to populate.
 * @return {module:model/V1Merchant} The populated <code>V1Merchant</code> instance.
 */
exports.constructFromObject = function(data, obj) {
  if (data) {
    obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
      obj['id'] = ApiClient.convertToType(data['id'], 'String');
    }
      if (data.hasOwnProperty('name')) {
      obj['name'] = ApiClient.convertToType(data['name'], 'String');
    }
      if (data.hasOwnProperty('email')) {
      obj['email'] = ApiClient.convertToType(data['email'], 'String');
    }
      if (data.hasOwnProperty('account_type')) {
      obj['account_type'] = ApiClient.convertToType(data['account_type'], 'String');
    }
      if (data.hasOwnProperty('account_capabilities')) {
      obj['account_capabilities'] = ApiClient.convertToType(data['account_capabilities'], ['String']);
    }
      if (data.hasOwnProperty('country_code')) {
      obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
    }
      if (data.hasOwnProperty('language_code')) {
      obj['language_code'] = ApiClient.convertToType(data['language_code'], 'String');
    }
      if (data.hasOwnProperty('currency_code')) {
      obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
    }
      if (data.hasOwnProperty('business_name')) {
      obj['business_name'] = ApiClient.convertToType(data['business_name'], 'String');
    }
      if (data.hasOwnProperty('business_address')) {
      obj['business_address'] = Address.constructFromObject(data['business_address']);
    }
      if (data.hasOwnProperty('business_phone')) {
      obj['business_phone'] = V1PhoneNumber.constructFromObject(data['business_phone']);
    }
      if (data.hasOwnProperty('business_type')) {
      obj['business_type'] = ApiClient.convertToType(data['business_type'], 'String');
    }
      if (data.hasOwnProperty('shipping_address')) {
      obj['shipping_address'] = Address.constructFromObject(data['shipping_address']);
    }
      if (data.hasOwnProperty('location_details')) {
      obj['location_details'] = V1MerchantLocationDetails.constructFromObject(data['location_details']);
    }
      if (data.hasOwnProperty('market_url')) {
      obj['market_url'] = ApiClient.convertToType(data['market_url'], 'String');
    }
    }
  return obj;
}

/**
 * The merchant account's unique identifier.
 * @member {String} id
 */
exports.prototype['id'] = undefined;
/**
 * The name associated with the merchant account.
 * @member {String} name
 */
exports.prototype['name'] = undefined;
/**
 * The email address associated with the merchant account.
 * @member {String} email
 */
exports.prototype['email'] = undefined;
/**
 * Indicates whether the merchant account corresponds to a single-location account (LOCATION) or a business account (BUSINESS). This value is almost always LOCATION. See [V1MerchantAccountType](#type-v1merchantaccounttype) for possible values
 * @member {String} account_type
 */
exports.prototype['account_type'] = undefined;
/**
 * Capabilities that are enabled for the merchant's Square account. Capabilities that are not listed in this array are not enabled for the account.
 * @member {Array.<String>} account_capabilities
 */
exports.prototype['account_capabilities'] = undefined;
/**
 * The country associated with the merchant account, in ISO 3166-1-alpha-2 format.
 * @member {String} country_code
 */
exports.prototype['country_code'] = undefined;
/**
 * The language associated with the merchant account, in BCP 47 format.
 * @member {String} language_code
 */
exports.prototype['language_code'] = undefined;
/**
 * The currency associated with the merchant account, in ISO 4217 format. For example, the currency code for US dollars is USD.
 * @member {String} currency_code
 */
exports.prototype['currency_code'] = undefined;
/**
 * The name of the merchant's business.
 * @member {String} business_name
 */
exports.prototype['business_name'] = undefined;
/**
 * The address of the merchant's business.
 * @member {module:model/Address} business_address
 */
exports.prototype['business_address'] = undefined;
/**
 * The phone number of the merchant's business.
 * @member {module:model/V1PhoneNumber} business_phone
 */
exports.prototype['business_phone'] = undefined;
/**
 * The type of business operated by the merchant. See [V1MerchantBusinessType](#type-v1merchantbusinesstype) for possible values
 * @member {String} business_type
 */
exports.prototype['business_type'] = undefined;
/**
 * The merchant's shipping address.
 * @member {module:model/Address} shipping_address
 */
exports.prototype['shipping_address'] = undefined;
/**
 * Additional information for a single-location account specified by its associated business account, if it has one.
 * @member {module:model/V1MerchantLocationDetails} location_details
 */
exports.prototype['location_details'] = undefined;
/**
 * The URL of the merchant's online store.
 * @member {String} market_url
 */
exports.prototype['market_url'] = undefined;



module.exports = exports;



