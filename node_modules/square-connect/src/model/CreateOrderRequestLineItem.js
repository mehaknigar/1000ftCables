/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * OpenAPI spec version: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.0-SNAPSHOT
 *
 */
var ApiClient = require('../ApiClient');
var CreateOrderRequestDiscount = require('./CreateOrderRequestDiscount');
var CreateOrderRequestModifier = require('./CreateOrderRequestModifier');
var CreateOrderRequestTax = require('./CreateOrderRequestTax');
var Money = require('./Money');




/**
 * @deprecated
 * The CreateOrderRequestLineItem model module.
 * @module model/CreateOrderRequestLineItem
 */

/**
 * Constructs a new <code>CreateOrderRequestLineItem</code>.
 * __Deprecated__: Please use the [OrderLineItem](#type-orderlineitem) type in the order field of [CreateOrderRequest](#type-createorderrequest) instead.  Represents a line item to include in an order. Each line item describes a different product to purchase, with its own quantity and price details.  Line items can either reference objects from the merchant&#39;s catalog, or can alternatively specify a name and price instead.
 * @alias module:model/CreateOrderRequestLineItem
 * @class
 * @param quantity {String} The quantity to purchase, as a string representation of a number.  This string must have a positive integer value.
 */
var exports = function(quantity) {
  var _this = this;


  _this['quantity'] = quantity;







};

/**
 * Constructs a <code>CreateOrderRequestLineItem</code> from a plain JavaScript object, optionally creating a new instance.
 * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
 * @param {Object} data The plain JavaScript object bearing properties of interest.
 * @param {module:model/CreateOrderRequestLineItem} obj Optional instance to populate.
 * @return {module:model/CreateOrderRequestLineItem} The populated <code>CreateOrderRequestLineItem</code> instance.
 */
exports.constructFromObject = function(data, obj) {
  if (data) {
    obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
      obj['name'] = ApiClient.convertToType(data['name'], 'String');
    }
      if (data.hasOwnProperty('quantity')) {
      obj['quantity'] = ApiClient.convertToType(data['quantity'], 'String');
    }
      if (data.hasOwnProperty('base_price_money')) {
      obj['base_price_money'] = Money.constructFromObject(data['base_price_money']);
    }
      if (data.hasOwnProperty('variation_name')) {
      obj['variation_name'] = ApiClient.convertToType(data['variation_name'], 'String');
    }
      if (data.hasOwnProperty('note')) {
      obj['note'] = ApiClient.convertToType(data['note'], 'String');
    }
      if (data.hasOwnProperty('catalog_object_id')) {
      obj['catalog_object_id'] = ApiClient.convertToType(data['catalog_object_id'], 'String');
    }
      if (data.hasOwnProperty('modifiers')) {
      obj['modifiers'] = ApiClient.convertToType(data['modifiers'], [CreateOrderRequestModifier]);
    }
      if (data.hasOwnProperty('taxes')) {
      obj['taxes'] = ApiClient.convertToType(data['taxes'], [CreateOrderRequestTax]);
    }
      if (data.hasOwnProperty('discounts')) {
      obj['discounts'] = ApiClient.convertToType(data['discounts'], [CreateOrderRequestDiscount]);
    }
    }
  return obj;
}

/**
 * Only used for ad hoc line items. The name of the line item. This value cannot exceed 500 characters.  Do not provide a value for this field if you provide a value for `catalog_object_id`.
 * @member {String} name
 */
exports.prototype['name'] = undefined;
/**
 * The quantity to purchase, as a string representation of a number.  This string must have a positive integer value.
 * @member {String} quantity
 */
exports.prototype['quantity'] = undefined;
/**
 * The base price for a single unit of the line item.  `base_price_money` is required for ad hoc line items and variable priced `CatalogItemVariation`s. If both `catalog_object_id` and `base_price_money` are set, `base_price_money` will override the CatalogItemVariation's price.
 * @member {module:model/Money} base_price_money
 */
exports.prototype['base_price_money'] = undefined;
/**
 * Only used for ad hoc line items. The variation name of the line item. This value cannot exceed 255 characters.  If this value is not set for an ad hoc line item, the default value of `Regular` is used.  Do not provide a value for this field if you provide a value for the `catalog_object_id`.
 * @member {String} variation_name
 */
exports.prototype['variation_name'] = undefined;
/**
 * The note of the line item. This value cannot exceed 500 characters.
 * @member {String} note
 */
exports.prototype['note'] = undefined;
/**
 * Only used for Catalog line items. The catalog object ID for an existing `CatalogItemVariation`.  Do not provide a value for this field if you provide a value for `name` and `base_price_money`.
 * @member {String} catalog_object_id
 */
exports.prototype['catalog_object_id'] = undefined;
/**
 * Only used for Catalog line items. The modifiers to include on the line item.
 * @member {Array.<module:model/CreateOrderRequestModifier>} modifiers
 */
exports.prototype['modifiers'] = undefined;
/**
 * The taxes to include on the line item.
 * @member {Array.<module:model/CreateOrderRequestTax>} taxes
 */
exports.prototype['taxes'] = undefined;
/**
 * The discounts to include on the line item.
 * @member {Array.<module:model/CreateOrderRequestDiscount>} discounts
 */
exports.prototype['discounts'] = undefined;



module.exports = exports;



